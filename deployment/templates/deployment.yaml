{{- define "mylibchart.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mylibchart.fullname" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{ include "mylibchart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "mylibchart.fullname" . }}  
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default 1 }}
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ include "mylibchart.fullname" . }} 
      {{- if .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml .Values.deployment.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      nodeSelector:
        {{- if .Values.nodeSelector }}
        {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- end }}
      containers:
        - name: {{ include "mylibchart.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.deployment.command }}
          command: {{ .Values.deployment.command }}
          {{- end }}
          {{- if .Values.deployment.args }}
          args: {{ .Values.deployment.args }}
          {{- end }}
          ports:
            {{- range .Values.service.specs }}
            - name: {{ .name }}
              containerPort: {{ .targetPort | default .port }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- if .Values.readinessProbe.httpGet }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port | default 80 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 0 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}
            successThreshold: {{ .Values.readinessProbe.successThreshold | default 1 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- if .Values.startupProbe.httpGet }}
            httpGet:
              path: {{ .Values.startupProbe.httpGet.path }}
              port: {{ .Values.startupProbe.httpGet.port | default 80 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds | default 0 }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds | default 10 }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold | default 3 }}
          {{- end }}
      {{- if .Values.resources }}
      resources:
        {{- toYaml .Values.resources | nindent 8 }}
      {{- end }}
{{- end }}